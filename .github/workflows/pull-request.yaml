name: Build PR

on:
  pull_request:
    paths:
      - .github/workflows/pull-request
      - Dockerfile
      - frontend/**
      - backend/**
      - global/**
      - rootfs/**
      
jobs:
  backend-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
              
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Test Backend
        run: |
         sudo pip install certbot
         sudo mkdir -p /usr/local/nginx/conf/conf.d/include /data/tls/certbot /tmp/acme-challenge
         sudo touch /usr/local/nginx/conf/conf.d/include/ip_ranges.conf
         sudo cp rootfs/etc/tls/certbot.ini /data/tls/certbot/config.ini
         mv global backend
         cd backend
         npm install --force
         sudo nginx
         NODE_ENV=production sudo -E timeout 30 node --abort_on_uncaught_exception --max_old_space_size=250 index.js || if [ "$?" == "124" ]; then exit 0; else exit 1; fi

      - name: Kill workflow
        if: failure()
        run: |
         curl -X POST https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/cancel --header "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
         
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          
      - name: Prepare frontend
        run: |
         export NODE_OPTIONS=--openssl-legacy-provider
         npm install --global yarn
         cd frontend
         sed -i "s|\"0.0.0\"|\""$(cat ../global/.version)"\"|g" package.json
         yarn --no-lockfile install
         yarn --no-lockfile build
         mkdir dist/.well-known
         cp ../security.txt dist/.well-known
         
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:          
          platforms: arm64 #all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: env.BUILDKIT_STEP_LOG_MAX_SIZE=-1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ github.token }}

      - name: Set PR-Number
        id: pr
        run: echo "pr=$(echo pr-${{ github.ref_name }} | sed "s/refs\/pull\/://g" | sed "s/\/merge//g")" >> $GITHUB_OUTPUT

      - name: Build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64 #,linux/amd64/v2,linux/amd64/v3,linux/amd64/v4 #,linux/ppc64le,linux/s390x,linux/386,linux/arm/v7,linux/arm/v6
          push: ${{ github.event_name == 'pull_request' }}
          tags: ghcr.io/${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:${{ steps.pr.outputs.pr }}
                
      - name: show version
        run: docker run --rm --entrypoint nginx ghcr.io/${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:${{ steps.pr.outputs.pr }} -V
          
      - name: add comment
        uses: mshick/add-pr-comment@v2
        with:
          message: "The Docker Image can now be found here: `ghcr.io/${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:${{ steps.pr.outputs.pr }}`"
          repo-token: ${{ github.token }}
