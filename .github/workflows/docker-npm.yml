name: Docker NPM

on:
  push:
    paths:
      - .version
      - docker/Dockerfile
      - .github/workflows/docker-npm.yml
  pull_request:
    paths:
      - .version
      - docker/Dockerfile
      - .github/workflows/docker-npm.yml
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/testing'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
          
      - name: Read VERSION file
        id: getversion
        run: echo "::set-output name=version::$(cat .version)"
        
      - name: read version
        run: |
         sh 'cat frontend/package.json | jq --arg BUILD_VERSION "${BUILD_VERSION}" \'.version = $BUILD_VERSION\' | sponge frontend/package.json'
         sh 'echo -e "\\E[1;36mFrontend Version is:\\E[1;33m $(cat frontend/package.json | jq -r .version)\\E[0m"'
         sh 'cat backend/package.json | jq --arg BUILD_VERSION "${BUILD_VERSION}" \'.version = $BUILD_VERSION\' | sponge backend/package.json'
         sh 'echo -e "\\E[1;36mBackend Version is:\\E[1;33m  $(cat backend/package.json | jq -r .version)\\E[0m"'
         sh 'sed -i -E "s/(version-)[0-9]+\\.[0-9]+\\.[0-9]+(-green)/\\1${BUILD_VERSION}\\2/" README.md'
        
      - name: cache-frontend
        id: cache-frontend
        uses: actions/cache@v3
        with:
          path: frontend/dist
          key: ${{ steps.getversion.outputs.version }}-frontend-${{ secrets.CACHE_ID }}
          
      - name: Prepair frontend
        if: steps.cache-frontend.outputs.cache-hit != 'true'
        run: ./scripts/frontend-build

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: env.BUILDKIT_STEP_LOG_MAX_SIZE=-1

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
               
      - name: Build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./docker/Dockerfile
          platforms: linux/amd64 #,linux/arm64 #,linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:${{ github.ref_name }}
          build-args: |
           "TARGETPLATFORM=linux/amd64"
           "BUILDPLATFORM=linux/amd64"
           "BUILD_VERSION="${BUILD_VERSION}"
           "BUILD_COMMIT="${BUILD_COMMIT}"
           "BUILD_DATE="$(date '+%Y-%m-%d %T %Z')""
                
      - name: Show Nginx version
        run: docker run --rm ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:${{ github.ref_name }} /usr/sbin/nginx -V
