name: Docker NPM

on:
  push:
    paths:
      - .version
      - docker/Dockerfile
      - .github/workflows/docker-npm.yml
  pull_request:
    paths:
      - .version
      - docker/Dockerfile
      - .github/workflows/docker-npm.yml
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3      
          
      - name: Read VERSION file
        id: version
        run: echo "::set-output name=version::$(cat .version)"
        
      - name: Set current date as env variable
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%dT%H:%M:%S')"
        
      - name: set envs
        run: |
         export "BUILD_VERSION=${{ steps.version.outputs.version }}"
         export "BUILD_COMMIT=${{ github.sha }}"
         export "BUILD_DATE=${{ steps.date.outputs.date }}"
        
      - name: cache-frontend
        id: cache-frontend
        uses: actions/cache@v3
        with:
          path: frontend/dist
          key: ${{ steps.version.outputs.version }}-frontend-${{ secrets.CACHE_ID }}
          
      - name: Prepair frontend
        if: steps.cache-frontend.outputs.cache-hit != 'true'
        run: ./scripts/frontend-build

      - name: prepair build
        run: |
         cd backend
         yarn install

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: env.BUILDKIT_STEP_LOG_MAX_SIZE=-1

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
               
      - name: Build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./docker/Dockerfile
          platforms: linux/amd64 #,linux/arm64 #,linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:${{ github.ref_name }}
          build-args: |
           "TARGETPLATFORM=linux/amd64"
           "BUILDPLATFORM=linux/amd64"
           "BUILD_VERSION=${{ steps.version.outputs.version }}"
           "BUILD_COMMIT=${{ github.sha }}"
           "BUILD_DATE=${{ steps.date.outputs.date }}"
                
      - name: Show Nginx version
        run: docker run --rm ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:${{ github.ref_name }} /usr/sbin/nginx -V
